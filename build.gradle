subprojects {
  buildscript {
    ext {
      springDependencyManagementVersion = "0.5.3.RELEASE"
      springBootPluginVersion = "1.2.7.RELEASE"
      springCloudStarterVersion = "1.0.2.RELEASE"
      springCloudConfigVersion = "1.0.3.RELEASE"
      gradleDockerVersion = "1.2"
      gradleDockerRegistry = "registry.aixifan.com"
      propdepsPluginVersion = "0.0.7"
    }
    repositories {
      mavenLocal()
      maven { url "http://nexus.acfun.tv/nexus/content/groups/public/" }
      maven { url "http://repo.spring.io/plugins-release" }
      maven { url "https://repo.spring.io/release" }
      maven { url "https://repo.spring.io/milestone" }
      maven { url "https://repo.spring.io/snapshot" }
      mavenCentral()
    }

    dependencies {
      classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}")
      classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootPluginVersion}")
      classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
      classpath("org.springframework.build.gradle:propdeps-plugin:${propdepsPluginVersion}")
    }
  }

  group "tv.acfun.cloud.server"
  version "1.0-SNAPSHOT"

  apply plugin: "java"
  apply plugin: "idea"
  apply plugin: "maven"

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenLocal()
    maven { url "http://nexus.acfun.tv/nexus/content/groups/public/" }
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    mavenCentral()
  }
  task javadocJar(type: Jar) {
    classifier = "javadoc"
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  configurations.all {
    resolutionStrategy {
      cacheChangingModulesFor 0, "seconds"
      cacheDynamicVersionsFor 0, 'seconds'
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = "2.8"
}